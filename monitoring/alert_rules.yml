# Prometheus Alert Rules for Lift OS Core
groups:
  - name: lift-os-core.rules
    rules:
      # Service Health Alerts
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "Service {{ $labels.job }} on instance {{ $labels.instance }} has been down for more than 1 minute."
          runbook_url: "https://docs.lift-os.com/runbooks/service-down"

      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High error rate on {{ $labels.job }}"
          description: "Error rate is {{ $value | humanizePercentage }} on {{ $labels.job }} for the last 5 minutes."

      - alert: CriticalErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.10
        for: 2m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "Critical error rate on {{ $labels.job }}"
          description: "Error rate is {{ $value | humanizePercentage }} on {{ $labels.job }} for the last 2 minutes."

      # Performance Alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High response time on {{ $labels.job }}"
          description: "95th percentile response time is {{ $value }}s on {{ $labels.job }}."

      - alert: CriticalResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 5
        for: 2m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "Critical response time on {{ $labels.job }}"
          description: "95th percentile response time is {{ $value }}s on {{ $labels.job }}."

      # Resource Usage Alerts
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High CPU usage on {{ $labels.job }}"
          description: "CPU usage is {{ $value }}% on {{ $labels.job }}."

      - alert: HighMemoryUsage
        expr: process_resident_memory_bytes / 1024 / 1024 / 1024 > 1
        for: 10m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High memory usage on {{ $labels.job }}"
          description: "Memory usage is {{ $value }}GB on {{ $labels.job }}."

  - name: database.rules
    rules:
      # Database Alerts
      - alert: PostgreSQLDown
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database is down on {{ $labels.instance }}."

      - alert: PostgreSQLTooManyConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "PostgreSQL has too many connections"
          description: "PostgreSQL has {{ $value | humanizePercentage }} of max connections in use."

      - alert: PostgreSQLSlowQueries
        expr: rate(pg_stat_database_tup_returned[5m]) / rate(pg_stat_database_tup_fetched[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "PostgreSQL has slow queries"
          description: "PostgreSQL query efficiency is {{ $value | humanizePercentage }}."

      - alert: PostgreSQLHighDiskUsage
        expr: pg_database_size_bytes / 1024 / 1024 / 1024 > 10
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "PostgreSQL database size is large"
          description: "PostgreSQL database size is {{ $value }}GB."

  - name: redis.rules
    rules:
      # Redis Alerts
      - alert: RedisDown
        expr: redis_up == 0
        for: 1m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "Redis is down"
          description: "Redis instance is down on {{ $labels.instance }}."

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is {{ $value | humanizePercentage }}."

      - alert: RedisHighConnections
        expr: redis_connected_clients > 100
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Redis has many connections"
          description: "Redis has {{ $value }} connected clients."

      - alert: RedisSlowLog
        expr: increase(redis_slowlog_length[5m]) > 10
        for: 2m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Redis slow log is growing"
          description: "Redis slow log has increased by {{ $value }} entries in 5 minutes."

  - name: business.rules
    rules:
      # Business Logic Alerts
      - alert: HighUserRegistrationFailures
        expr: rate(user_registrations_total{status="failed"}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          team: product
        annotations:
          summary: "High user registration failure rate"
          description: "User registration failure rate is {{ $value }} per second."

      - alert: AuthenticationFailures
        expr: rate(authentication_attempts_total{status="failed"}[5m]) > 1
        for: 5m
        labels:
          severity: warning
          team: security
        annotations:
          summary: "High authentication failure rate"
          description: "Authentication failure rate is {{ $value }} per second."

      - alert: ModuleDeploymentFailures
        expr: rate(module_deployments_total{status="failed"}[10m]) > 0.1
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Module deployment failures"
          description: "Module deployment failure rate is {{ $value }} per second."

      - alert: BillingProcessingErrors
        expr: rate(billing_transactions_total{status="error"}[5m]) > 0.01
        for: 2m
        labels:
          severity: critical
          team: finance
        annotations:
          summary: "Billing processing errors"
          description: "Billing error rate is {{ $value }} per second."

      - alert: MemoryServiceErrors
        expr: rate(memory_operations_total{status="error"}[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Memory service errors"
          description: "Memory service error rate is {{ $value }} per second."

  - name: security.rules
    rules:
      # Security Alerts
      - alert: SuspiciousLoginActivity
        expr: rate(authentication_attempts_total{status="failed"}[1m]) > 10
        for: 1m
        labels:
          severity: critical
          team: security
        annotations:
          summary: "Suspicious login activity detected"
          description: "High rate of failed login attempts: {{ $value }} per second."

      - alert: UnauthorizedAPIAccess
        expr: rate(http_requests_total{status="401"}[5m]) > 5
        for: 5m
        labels:
          severity: warning
          team: security
        annotations:
          summary: "High rate of unauthorized API access"
          description: "Unauthorized API access rate is {{ $value }} per second."

      - alert: RateLimitExceeded
        expr: rate(http_requests_total{status="429"}[5m]) > 1
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Rate limit frequently exceeded"
          description: "Rate limit exceeded {{ $value }} times per second."

  - name: infrastructure.rules
    rules:
      # Infrastructure Alerts
      - alert: DiskSpaceHigh
        expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes > 0.85
        for: 5m
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "Disk space usage is high"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}."

      - alert: DiskSpaceCritical
        expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes > 0.95
        for: 1m
        labels:
          severity: critical
          team: infrastructure
        annotations:
          summary: "Disk space usage is critical"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}."

      - alert: HighNetworkTraffic
        expr: rate(node_network_receive_bytes_total[5m]) > 100 * 1024 * 1024
        for: 10m
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "High network traffic"
          description: "Network receive rate is {{ $value | humanizeBytes }} per second on {{ $labels.instance }}."

      - alert: SSLCertificateExpiring
        expr: probe_ssl_earliest_cert_expiry - time() < 7 * 24 * 3600
        for: 1h
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}."

      - alert: SSLCertificateExpired
        expr: probe_ssl_earliest_cert_expiry - time() < 0
        for: 1m
        labels:
          severity: critical
          team: infrastructure
        annotations:
          summary: "SSL certificate expired"
          description: "SSL certificate for {{ $labels.instance }} has expired."

  - name: external.rules
    rules:
      # External Service Alerts
      - alert: ExternalAPIDown
        expr: probe_success{job="blackbox-http"} == 0
        for: 2m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "External API is down"
          description: "External API {{ $labels.instance }} is not responding."

      - alert: ExternalAPISlowResponse
        expr: probe_duration_seconds{job="blackbox-http"} > 5
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "External API slow response"
          description: "External API {{ $labels.instance }} response time is {{ $value }}s."

      - alert: KSEAPIErrors
        expr: rate(kse_api_requests_total{status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "KSE API errors"
          description: "KSE API error rate is {{ $value }} per second."