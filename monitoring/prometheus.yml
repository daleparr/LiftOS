# Prometheus Configuration for Lift OS Core
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'lift-os-core'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Lift OS Core Services
  - job_name: 'lift-os-gateway'
    static_configs:
      - targets: ['gateway:8000']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  - job_name: 'lift-os-auth'
    static_configs:
      - targets: ['auth:8001']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  - job_name: 'lift-os-memory'
    static_configs:
      - targets: ['memory:8002']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  - job_name: 'lift-os-registry'
    static_configs:
      - targets: ['registry:8003']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  - job_name: 'lift-os-billing'
    static_configs:
      - targets: ['billing:8004']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  - job_name: 'lift-os-observability'
    static_configs:
      - targets: ['observability:8005']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Infrastructure Monitoring
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Container Monitoring
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Module Monitoring (Dynamic Discovery)
  - job_name: 'lift-modules'
    consul_sd_configs:
      - server: 'consul:8500'
        services: ['lift-module']
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_service_metadata_module_name]
        target_label: module_name
      - source_labels: [__meta_consul_service_metadata_module_version]
        target_label: module_version

  # Blackbox Monitoring (External Health Checks)
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.your-domain.com/health
        - https://your-domain.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL Certificate Monitoring
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - your-domain.com:443
        - api.your-domain.com:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.your-domain.com/api/v1/write"
    basic_auth:
      username: "prometheus"
      password: "your-remote-write-password"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|process_.*|promhttp_.*'
        action: drop

# Remote read configuration
remote_read:
  - url: "https://prometheus-remote-read.your-domain.com/api/v1/read"
    basic_auth:
      username: "prometheus"
      password: "your-remote-read-password"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true